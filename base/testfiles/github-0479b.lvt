\makeatletter
\let\NeedsTeXFormat@saved\NeedsTeXFormat
\def\unloadlatexrelease#1{%
  \expandafter\let\csname ver@test-latexrelease.sty\endcsname\@undefined
  % change IIR -> IIR2 so that IncludeRelease thinks nothing has been applied in the past
  % need to sneed that in as the definition is inside the package, so hook on \NeedTeXFormat
  \def\NeedsTeXFormat{%
  \def\@IncludeInRele@se####1####2####3{%
    \toks@{[####1] ####3}%
    \expandafter\ifx\csname\string####2+\@currname+IIR#1\endcsname\relax
      \ifnum\expandafter\@parse@version####1//00\@nil
            >\expandafter\@parse@version\fmtversion//00\@nil
        \GenericInfo{}{Skipping: \the\toks@}%
       \expandafter\expandafter\expandafter\@gobble@IncludeInRelease
      \else
        \GenericInfo{}{Applying: \the\toks@}%
        \@includeinreleasetrue
        \expandafter\let\csname\string####2+\@currname+IIR#1\endcsname\@empty
      \fi
    \else
      \GenericInfo{}{Already applied: \the\toks@}%
      \expandafter\@gobble@IncludeInRelease
    \fi
  }%
  \NeedsTeXFormat@saved}
}

\input{test2e}

% Faking LaTeX 2021-11-01, rolling back
\def\fmtversion{2021-11-01}
\def\reserved@a#1-#2-#3-{#1#2#3}
\edef\sourceLaTeXdate{\expandafter\reserved@a\fmtversion- }

% Code (supposedly) built into the kernel:
\ExplSyntaxOn
\cs_new:Npn \__internal_A: { changed~internal }
\cs_new:Npn \A { \__internal_A: }
\cs_new:Npn \B { altered }
\cs_new:Npn \C { meeto }
\cs_new:Npn \D { }
\ExplSyntaxOff

\begin{filecontents}{test-latexrelease.sty}
% \begin{steal code from latexrelease.sty}
% This piece of unreadability grabs the initialisation code
% in latexrelease.sty and ignores the actual LaTeX release
% patches.  Then we add below our own "LaTeX release" code
% to test.
\let\ltxendinput\endinput
\long\def\endinput#1\endofthisfile{}
\let\endofthisfile\relax
\begingroup
  \catcode`\^^@=12
  \everyeof{\stopstop\expandafter\x\noexpand}%
  \long\def\x#1\edef\latexreleaseversion#2#3%
          \let\currentLaTeXdate\requestedLaTeXdate#4\xdef{%
    \edef\x{\unexpanded{\edef\x{\endgroup %  V--------V change date
      \unexpanded{#1\def\latexreleaseversion{2021-11-01}#3%
          \let\currentLaTeXdate\requestedLaTeXdate}}}}%
      \long\def\y##1\stopstop{\endgroup}%
      #4\afterassignment\y\xdef}%
  \expandafter\expandafter\expandafter\x\@@input latexrelease.sty \relax
\x\latexrelease@postexpl
% \end{steal code from latexrelease.sty}

% Extracted latexrelease.sty blocks:
\ExplSyntaxOn
\NewModuleRelease{lttestmodule}{2020/10/01}

% -----------------------------------------
% \cs_new:Npn \__internal_A: { original }
\cs_new:Npn \A { \__internal_A: }

\IncludeInRelease{2021/11/01}{\__internal_A:}{change~\__internal_A:}
\cs_gset:Npn \__internal_A: { changed~internal }
\EndIncludeInRelease
\IncludeInRelease{2021/06/01}{\__internal_A:}{change~\__internal_A:}
\cs_gset:Npn \__internal_A: { previous~version }
\EndIncludeInRelease
\IncludeInRelease{2020/10/01}{\__internal_A:}{change~\__internal_A:}
\cs_gset:Npn \__internal_A: { original }
\EndIncludeInRelease

% -----------------------------------------
% \cs_new:Npn \B { }

\IncludeInRelease{2021/06/01}{\B}{change~\B}
\cs_gset:Npn \B { altered }
\EndIncludeInRelease
\IncludeInRelease{2020/10/01}{\B}{change~\B}
\cs_gset:Npn \B { }
\EndIncludeInRelease

% -----------------------------------------
% \cs_new:Npn \C { }

\IncludeInRelease{2021/11/01}{\C}{change~\C}
\cs_gset:Npn \C { metoo }
\EndIncludeInRelease
\IncludeInRelease{2020/10/01}{\C}{change~\C}
\cs_gset:Npn \C { }
\EndIncludeInRelease

\cs_new:Npn \D { }

% -----------------------------------------
\IncludeInRelease{0000/00/00}{lttestmodule}{Undo~module}
% Only undo public commands

\cs_undefine:N \A
\cs_undefine:N \B
\cs_undefine:N \C
\cs_undefine:N \D

\EndModuleRelease
\ExplSyntaxOff

\endofthisfile
\let\endinput\ltxendinput
\end{filecontents}
%%% --------------------------------------------------------------------

\START

\RequirePackage[2021-11-01]{test-latexrelease}
\edef\x{\A}\show\x \show\B \show\C \show\D

\unloadlatexrelease{1}

\RequirePackage[2021-06-01]{test-latexrelease}
\edef\x{\A}\show\x \show\B \show\C \show\D

\unloadlatexrelease{2}

\RequirePackage[2020-10-01]{test-latexrelease}
\edef\x{\A}\show\x \show\B \show\C \show\D

\unloadlatexrelease{3}

\RequirePackage[2020-02-02]{test-latexrelease}
\edef\x{\A}\show\x \show\B \show\C \show\D

\END
