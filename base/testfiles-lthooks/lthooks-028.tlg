This is a generated file for the l3build validation system.
Don't change this file in any respect.
(lthooks-028-pkg.sty
! LaTeX hooks Error: Illegal use of \AddToHook{begindocument}[top-level]{...}.
(hooks)              'top-level' is reserved for the user's document.
For immediate help type H <return>.
 ...                                              
l. ......ypeout{'top-level' from \jobname-pkg}\OMIT}
The 'top-level' label is meant for user code only, and should only be used
(sparingly) in the main document. Use the default label 'lthooks-028-pkg' for
this package, or another suitable label.
)
! LaTeX hooks Error: Illegal use of \AddToHook{begindocument}[top-level]{...}.
(hooks)              'top-level' is reserved for the user's document.
For immediate help type H <return>.
 ...                                              
l. ......eout{'top-level' with changed label}\OMIT}
The 'top-level' label is meant for user code only, and should only be used
(sparingly) in the main document. Use the default label 'not-top-level' for
this package, or another suitable label.
from lthooks-028-pkg
'top-level' with default label
<<< Hook: 'aaa'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   'package' > 'other package'
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }\typeout {also top-level }
...   'package': \scan_stop: 
...   'other package': \scan_stop: 
... Execution order:
...   'other package', 'package'
>>>
<<< Hook: 'bbb'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   'package' > 'other package'
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }\typeout {also top-level }
...   'package': \scan_stop: 
...   'other package': \scan_stop: 
... Execution order:
...   Empty
>>>
<<< Hook: 'bbb'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   'package' > 'other package'
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }\typeout {also top-level }
...   'package': \scan_stop: 
...   'other package': \scan_stop: 
... Execution order:
...   'other package', 'package'
>>>
<<< Hook: 'ccc'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   'package' > 'other package'
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }\typeout {also top-level }
...   'package': \scan_stop: 
...   'other package': \scan_stop: 
... Execution order:
...   Empty
>>>
<<< Hook: 'ccc'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   'package' > 'other package'
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }\typeout {also top-level }
...   'package': \scan_stop: 
...   'other package': \scan_stop: 
... Execution order:
...   'other package', 'package'
>>>
<<< Hook: 'ddd'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }
... Execution order:
...   Empty
>>>
<<< Hook: 'ddd'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: Y
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
... Execution order:
...   Empty
>>>
<<< Hook: 'ddd'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }
... Execution order:
...   Empty
>>>
<<< Hook: 'ddd'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: Y
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
... Execution order:
...   Empty
>>>
<<< Hook: 'ddd'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: Y
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
... Execution order:
...   Empty
>>>
<<< Hook: 'ddd'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' -> \typeout {top-level }
... Execution order:
...   Empty
>>>
(lthooks-028.aux)
