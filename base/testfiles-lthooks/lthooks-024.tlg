This is a generated file for the l3build validation system.
Don't change this file in any respect.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX hooks Error: Empty code label on line .... Using 'to...
l. ...\testme{top-level}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX hooks Error: Empty code label on line .... Using 'to...
l. ...\testme{top-level}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' -> top-leveltop-leveltop-level
...   '..': \scan_stop: 
...   '../': \scan_stop: 
...   '/': \scan_stop: 
...   '//': \scan_stop: 
...   'top-level/': \scan_stop: 
...   '/./': \scan_stop: 
...   '.x': \scan_stop: 
...   '/.x': \scan_stop: 
...   '.x/': \scan_stop: 
...   'top-level/foo': \scan_stop: 
...   'top-level/foo/': \scan_stop: 
...   '/./foo': \scan_stop: 
... Execution order:
...   '..', '../', '/', '//', 'top-level/', '/./', '.x', '/.x', '.x/', 'top-level/foo', 'top-level/foo/', '/./foo'
>>>
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX hooks Error: Empty code label on line .... Using 'pk...
l. ...  \testme{pkg}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX hooks Error: Empty code label on line .... Using 'pk...
l. ...  \testme{pkg}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'pkg': \scan_stop: 
...   '..': \scan_stop: 
...   '../': \scan_stop: 
...   '/': \scan_stop: 
...   '//': \scan_stop: 
...   'pkg/': \scan_stop: 
...   '/./': \scan_stop: 
...   '.x': \scan_stop: 
...   '/.x': \scan_stop: 
...   '.x/': \scan_stop: 
...   'pkg/foo': \scan_stop: 
...   'pkg/foo/': \scan_stop: 
...   '/./foo': \scan_stop: 
... Execution order:
...   'pkg', '..', '../', '/', '//', 'pkg/', '/./', '.x', '/.x', '.x/', 'pkg/foo', 'pkg/foo/', '/./foo'
>>>
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'top-level/foo': \scan_stop: 
... Execution order:
...   'top-level/foo'
>>>
(lthooks-024-pkgA.sty
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'pkgA/foo': \scan_stop: 
... Execution order:
...   'pkgA/foo'
>>>
(lthooks-024-pkgB.sty
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'lthooks-024-pkgB/foo': \scan_stop: 
... Execution order:
...   'lthooks-024-pkgB/foo'
>>>
(lthooks-024-pkgC.sty
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'pkgC/foo': \scan_stop: 
... Execution order:
...   'pkgC/foo'
>>>
)
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'lthooks-024-pkgB/foo': \scan_stop: 
... Execution order:
...   'lthooks-024-pkgB/foo'
>>>
)
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'pkgA/foo': \scan_stop: 
... Execution order:
...   'pkgA/foo'
>>>
)
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'top-level/foo': \scan_stop: 
... Execution order:
...   'top-level/foo'
>>>
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'my-document/foo': \scan_stop: 
... Execution order:
...   'my-document/foo'
>>>
(lthooks-024-pkgA.sty
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'pkgA/foo': \scan_stop: 
... Execution order:
...   'pkgA/foo'
>>>
(lthooks-024-pkgB.sty
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'lthooks-024-pkgB/foo': \scan_stop: 
... Execution order:
...   'lthooks-024-pkgB/foo'
>>>
(lthooks-024-pkgC.sty
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'pkgC/foo': \scan_stop: 
... Execution order:
...   'pkgC/foo'
>>>
)
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'lthooks-024-pkgB/foo': \scan_stop: 
... Execution order:
...   'lthooks-024-pkgB/foo'
>>>
)
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'pkgA/foo': \scan_stop: 
... Execution order:
...   'pkgA/foo'
>>>
)
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   cmd_hook: N
...   # of arguments: 0
... Default rules:
...   None
... Rules:
...   None
... Code chunks:
...   next-only empty
...   'top level' empty
...   'my-document/foo': \scan_stop: 
... Execution order:
...   'my-document/foo'
>>>
