This is a generated file for the l3build validation system.
Don't change this file in any respect.
! Undefined control sequence.
<argument> \::error 
                    ! hooks: Empty code label on line .... Using `top-level' ...
l. ...\testme{top-level}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! hooks: Empty code label on line .... Using `top-level' ...
l. ...\testme{top-level}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
-> The hook 'foo':
> Code chunks:
>     .. -> ..
>     ../ -> ../
>     / -> /
>     // -> //
>     top-level/ -> top-level/
>     /./ -> /./
>     .x -> .x
>     /.x -> /.x
>     .x/ -> .x/
>     top-level/foo -> top-level/foo
>     top-level/foo/ -> top-level/foo/
>     /./foo -> /./foo
> Document-level (top-level) code (executed last):
>     -> top-leveltop-leveltop-level
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     .., ../, /, //, top-level/, /./, .x, /.x, .x/, top-level/foo,
top-level/foo/, /./foo.
! Undefined control sequence.
<argument> \::error 
                    ! hooks: Empty code label on line .... Using `pkg' instead.
l. ...  \testme{pkg}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! hooks: Empty code label on line .... Using `pkg' instead.
l. ...  \testme{pkg}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
-> The hook 'foo':
> Code chunks:
>     pkg -> top-leveltop-levelpkg
>     .. -> ..
>     ../ -> ../
>     / -> /
>     // -> //
>     pkg/ -> pkg/
>     /./ -> /./
>     .x -> .x
>     /.x -> /.x
>     .x/ -> .x/
>     pkg/foo -> pkg/foo
>     pkg/foo/ -> pkg/foo/
>     /./foo -> /./foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     pkg, .., ../, /, //, pkg/, /./, .x, /.x, .x/, pkg/foo, pkg/foo/, /./foo.
-> The hook 'foo':
> Code chunks:
>     top-level/foo -> top-level/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     top-level/foo.
(lthooks-024-pkgA.sty
-> The hook 'foo':
> Code chunks:
>     pkgA/foo -> pkgA/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     pkgA/foo.
(lthooks-024-pkgB.sty
-> The hook 'foo':
> Code chunks:
>     lthooks-024-pkgB/foo -> lthooks-024-pkgB/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     lthooks-024-pkgB/foo.
(lthooks-024-pkgC.sty
-> The hook 'foo':
> Code chunks:
>     pkgC/foo -> pkgC/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     pkgC/foo.
)
-> The hook 'foo':
> Code chunks:
>     lthooks-024-pkgB/foo -> lthooks-024-pkgB/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     lthooks-024-pkgB/foo.
)
-> The hook 'foo':
> Code chunks:
>     pkgA/foo -> pkgA/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     pkgA/foo.
)
-> The hook 'foo':
> Code chunks:
>     top-level/foo -> top-level/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     top-level/foo.
! Package hooks Error: You cannot change the default label for `top-level'.
(hooks)                Illegal
(hooks)                  \SetDefaultHookLabel{my-document}
(hooks)                on line ....
Type <return> to continue.
 ...                                              
l. ...\SetDefaultHookLabel{my-document}
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! Package hooks Error: Illegal \AddToHook{begindocument}[top-level]{...}.
(hooks)                'top-level' is reserved for the user's document.
For immediate help type H <return>.
 ...                                              
l. ......ook{begindocument}[top-level]{not allowed}
The 'top-level' label is meant for user code only, and should only be used
(sparingly) in the main document. Use the default label 'my-document' for this
package, or another suitable label.
-> The hook 'foo':
> Code chunks:
>     my-document/foo -> my-document/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     my-document/foo.
(lthooks-024-pkgA.sty
-> The hook 'foo':
> Code chunks:
>     pkgA/foo -> pkgA/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     pkgA/foo.
(lthooks-024-pkgB.sty
-> The hook 'foo':
> Code chunks:
>     lthooks-024-pkgB/foo -> lthooks-024-pkgB/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     lthooks-024-pkgB/foo.
(lthooks-024-pkgC.sty
-> The hook 'foo':
> Code chunks:
>     pkgC/foo -> pkgC/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     pkgC/foo.
)
-> The hook 'foo':
> Code chunks:
>     lthooks-024-pkgB/foo -> lthooks-024-pkgB/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     lthooks-024-pkgB/foo.
)
-> The hook 'foo':
> Code chunks:
>     pkgA/foo -> pkgA/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     pkgA/foo.
)
-> The hook 'foo':
> Code chunks:
>     my-document/foo -> my-document/foo
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     my-document/foo.
! Package hooks Error: Extra \PopDefaultHookLabel.
(hooks)                This command will be ignored.
Type <return> to continue.
 ...                                              
l. ...\PopDefaultHookLabel
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
allowed
(lthooks-024.aux)
! Package hooks Error: Missing \PopDefaultHookLabel.
(hooks)                The label `this' was pushed but never popped.
(hooks)                Something is wrong.
Type <return> to continue.
 ...                                              
l. ...\end{document}
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! Package hooks Error: Missing \PopDefaultHookLabel.
(hooks)                The label `should' was pushed but never popped.
(hooks)                Something is wrong.
Type <return> to continue.
 ...                                              
l. ...\end{document}
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! Package hooks Error: Missing \PopDefaultHookLabel.
(hooks)                The label `error' was pushed but never popped.
(hooks)                Something is wrong.
Type <return> to continue.
 ...                                              
l. ...\end{document}
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
