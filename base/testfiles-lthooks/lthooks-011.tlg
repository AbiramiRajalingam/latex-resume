This is a generated file for the l3build validation system.
Don't change this file in any respect.
**** Add to hook xxx (front) on input line ... <- foo
Update code for hook 'begindocument' on input line ...:
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'bfseries/defaults' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'mdseries/defaults' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist and kernel/warnings
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Code labels for sorting:
 l3backend-dvips
Data structure for label rules:
 l3backend-dvips = 0 -> 
Handled code for l3backend-dvips
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'xxx' on input line ...:
Code labels for sorting:
 front
Data structure for label rules:
 front = 0 -> 
Handled code for front
All initialized (non-empty) hooks:
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \g__hook_enddocument/info_next_code_tl  
 shipout/firstpage -> \bool_lazy_and:nnT {\cs_if_exist_p:N \g__kernel_backend_header_bool }{\g__kernel_backend_header_bool }{\__kernel_backend_literal:n {header=l3backend-dvips.pro}}\g__hook_shipout/firstpage_next_code_tl  
 xxx -> foo\g__hook_xxx_next_code_tl  
**** Add to hook xxx (rear) on input line ... <- bar
Update code for hook 'begindocument' on input line ...:
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'bfseries/defaults' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'mdseries/defaults' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist and kernel/warnings
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Code labels for sorting:
 l3backend-dvips
Data structure for label rules:
 l3backend-dvips = 0 -> 
Handled code for l3backend-dvips
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'xxx' on input line ...:
Code labels for sorting:
 front and rear
Data structure for label rules:
 front = 0 -> 
 rear = 0 -> 
Handled code for front
Handled code for rear
All initialized (non-empty) hooks:
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \g__hook_enddocument/info_next_code_tl  
 shipout/firstpage -> \bool_lazy_and:nnT {\cs_if_exist_p:N \g__kernel_backend_header_bool }{\g__kernel_backend_header_bool }{\__kernel_backend_literal:n {header=l3backend-dvips.pro}}\g__hook_shipout/firstpage_next_code_tl  
 xxx -> foobar\g__hook_xxx_next_code_tl  
**** Add to hook xxx (labels) on input line ... <- baz
Update code for hook 'begindocument' on input line ...:
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'bfseries/defaults' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'mdseries/defaults' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist and kernel/warnings
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Code labels for sorting:
 l3backend-dvips
Data structure for label rules:
 l3backend-dvips = 0 -> 
Handled code for l3backend-dvips
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'xxx' on input line ...:
Code labels for sorting:
 front, rear and labels
Data structure for label rules:
 front = 0 -> 
 rear = 0 -> 
 labels = 0 -> 
Handled code for front
Handled code for rear
Handled code for labels
All initialized (non-empty) hooks:
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \g__hook_enddocument/info_next_code_tl  
 shipout/firstpage -> \bool_lazy_and:nnT {\cs_if_exist_p:N \g__kernel_backend_header_bool }{\g__kernel_backend_header_bool }{\__kernel_backend_literal:n {header=l3backend-dvips.pro}}\g__hook_shipout/firstpage_next_code_tl  
 xxx -> foobarbaz\g__hook_xxx_next_code_tl  
**** Add to hook xxx (return) on input line ... <- boom
Update code for hook 'begindocument' on input line ...:
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'bfseries/defaults' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'mdseries/defaults' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist and kernel/warnings
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Code labels for sorting:
 l3backend-dvips
Data structure for label rules:
 l3backend-dvips = 0 -> 
Handled code for l3backend-dvips
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'xxx' on input line ...:
Code labels for sorting:
 front, rear, labels and return
Data structure for label rules:
 front = 0 -> 
 rear = 0 -> 
 labels = 0 -> 
 return = 0 -> 
Handled code for front
Handled code for rear
Handled code for labels
Handled code for return
All initialized (non-empty) hooks:
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \g__hook_enddocument/info_next_code_tl  
 shipout/firstpage -> \bool_lazy_and:nnT {\cs_if_exist_p:N \g__kernel_backend_header_bool }{\g__kernel_backend_header_bool }{\__kernel_backend_literal:n {header=l3backend-dvips.pro}}\g__hook_shipout/firstpage_next_code_tl  
 xxx -> foobarbazboom\g__hook_xxx_next_code_tl  
