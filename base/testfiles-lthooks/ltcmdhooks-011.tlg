This is a generated file for the l3build validation system.
Don't change this file in any respect.
! LaTeX hooks Error: Command hook `cmd/textbf/middle' invalid.
(hooks)              The hook should be `cmd/textbf/before' or
(hooks)              `cmd/textbf/after'.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{cmd/textbf/middle}{error}
You tried to add a hook to command \textbf, but `middle' is an invalid
component. Only `before' or `after' are allowed.
! LaTeX hooks Error: Command `\undefined' cannot have hooks because it doesn't
(hooks)              exist.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{cmd/undefined/before}{error}
You tried to add a hook to `\undefined', but LaTeX was not able to add the
hook to that command because `\undefined' doesn't exist.
! LaTeX hooks Error: Command `\detokenize' cannot have hooks because it is not
(hooks)              a macro.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{cmd/detokenize/before}{error}
You tried to add a hook to `\detokenize', but LaTeX was not able to add the
hook to that command because `\detokenize' is not a macro.
! LaTeX hooks Error: Command `\__hook_debug:n' cannot have hooks because it is
(hooks)              a private expl3 macro.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{cmd/__hook_debug:n/before}{error}
You tried to add a hook to `\__hook_debug:n', but LaTeX was not able to add
the hook to that command because `\__hook_debug:n' is a private expl3 macro.
! LaTeX hooks Error: Command `\mycmd' cannot have hooks because it can't be
(hooks)              retokenized cleanly.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{cmd/mycmd/before}{error}
You tried to add a hook to `\mycmd', but LaTeX was not able to add the hook to
that command because `\mycmd' can't be retokenized cleanly.
