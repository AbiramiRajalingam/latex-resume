This is a generated file for the l3build validation system.
Don't change this file in any respect.
Update code for hook 'begindocument' on input line ...:
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist and kernel/warnings
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Code labels for sorting:
 l3backend-dvips
Data structure for label rules:
 l3backend-dvips = 0 -> 
Handled code for l3backend-dvips
Update code for hook 'shipout/lastpage' on input line ...:
All initialized (non-empty) hooks:
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \g__hook_enddocument/info_next_code_tl  
 shipout/firstpage -> \bool_lazy_and:nnT {\cs_if_exist_p:N \g__kernel_backend_header_bool }{\g__kernel_backend_header_bool }{\__kernel_backend_literal:n {header=l3backend-dvips.pro}}\g__hook_shipout/firstpage_next_code_tl  
No file lthooks-021.aux.
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
**** Add to hook aaa (label1) on input line ... <- code1
Update code for hook 'aaa' on input line ...:
Code labels for sorting:
 label1
Data structure for label rules:
 label1 = 0 -> 
Handled code for label1
**** Add to hook aaa (label2) on input line ... <- code2
Update code for hook 'aaa' on input line ...:
Code labels for sorting:
 label1 and label2
Data structure for label rules:
 label1 = 0 -> 
 label2 = 0 -> 
Handled code for label1
Handled code for label2
Update code for hook '??' on input line ...:
The hook 'aaa':
 Code chunks:
    label1 -> code1
    label2 -> code2
 Extra code next invocation:
    ---
 Rules:
    label2|label1 with default relation <-
    ---
 Execution order:
    label1, label2
Update code for hook 'aaa' on input line ...:
 default rule label2|label1: <- found
---> Drop 'label2' code from \g__hook_aaa_code_prop because of 'label1'
Code labels for sorting:
 label1 and label2
Data structure for label rules:
 label1 = 0 -> 
 label2 = 0 -> 
Handled code for label1
Handled code for label2
The hook 'aaa':
 Code chunks:
    label1 -> code1
    label2 -> code2
 Extra code next invocation:
    ---
 Rules:
    label2|label1 with default relation <-
    ---
 Execution order:
    label1, label2
