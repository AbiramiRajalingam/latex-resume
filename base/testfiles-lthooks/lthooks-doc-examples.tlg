This is a generated file for the l3build validation system.
Don't change this file in any respect.
**** Add to hook example-hook (top-level) on input line ... <- [code from 'top-level']
**** Add to hook example-hook (foo) on input line ... <- [code from package 'foo']
**** Add to hook example-hook (bar) on input line ... <- [from package 'bar']
**** Add to hook example-hook (baz) on input line ... <- [package 'baz' is here]
<<< Hook: 'example-hook'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   # of arguments: 0
... Code chunks:
...   'foo' -> [code from package 'foo']
...   'bar' -> [from package 'bar']
...   'baz' -> [package 'baz' is here]
...   'top level' -> [code from 'top-level']
...   next-only-> [one-time code]
... Default rules:
...   'baz' < 'bar'
... Rules:
...   'foo' > 'baz'
... Execution order:
...   None
>>>
============================================
**** Add to hook myhook (packageA) on input line ... <- \typeout {A}
**** Add to hook myhook (packageB) on input line ... <- \typeout {B}
**** Add to hook myhook (packageC) on input line ... <- \typeout {C}
<<< Hook: 'myhook'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   # of arguments: 0
... Code chunks:
...   'packageA' -> \typeout {A}
...   'packageB' -> \typeout {B}
...   'packageC' -> \typeout {C}
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================
<<< Hook: 'myhook'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   # of arguments: 0
... Code chunks:
...   'packageA' -> \typeout {A}
...   'packageB' -> \typeout {B}
...   'packageC' -> \typeout {C}
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   'packageB' > 'packageA'
... Execution order:
...   None
>>>
============================================
**** Add to hook env/quote/before (package-1) on input line ... <- \begin {itshape}
**** Add to hook env/quote/after (package-1) on input line ... <- \end {itshape}
**** Add to hook env/quote/before (package-too) on input line ... <- \begin {color}{blue}
**** Add to hook env/quote/after (package-too) on input line ... <- \end {color}
<<< Hook: 'env/quote/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   # of arguments: 0
... Code chunks:
...   'package-1' -> \end {itshape}
...   'package-too' -> \end {color}
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================
!!!! If this test changes the documentation needs updating !!!!
