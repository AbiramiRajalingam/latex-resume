\RequirePackage[enable-debug,check-declarations]{expl3}
\ExplSyntaxOn
\debug_on:n { deprecation }
\ExplSyntaxOff

\input{regression-test}

\START

\typeout{=================================}
\def\foo{foo}

\AddToHook{\foo}{before}    \ShowHook{\foo}
\DisableHook{\foo}          \ShowHook{\foo}
\AddToHook{\foo}{after}     \ShowHook{\foo}

\typeout{=================================}
\def\foo{bar}

\AddToHook{\foo}{before}    \ShowHook{\foo}
\NewHook{\foo}              \ShowHook{\foo}
\DisableHook{\foo}          \ShowHook{\foo}

\typeout{=================================}
\def\foo{baz}

\DisableHook{\foo}          \ShowHook{\foo}
\AddToHookNext{\foo}{after} \ShowHook{\foo}

\typeout{=================================}
\def\foo{env/foo/before}

\DisableHook{\foo}          \ShowHook{\foo}
\AddToHookNext{\foo}{after} \ShowHook{\foo}

\typeout{=================================}
\def\foo{cmd/test/before}

\DisableHook{\foo}          \ShowHook{\foo}
\AddToHook{\foo}{after}     \ShowHook{\foo}

\typeout{=================================}
\def\foo{cmd/mycmd/after}

\makeatletter
\def\mycmd{%
  \@ifnextchar[{\mycmdaux}{\mycmdaux[]}}
\def\mycmdaux[#1]{\typeout{#1}}
\makeatother

% This won't work, so we disable...
\DisableHook{\foo}

% ... and try adding code nonetheless :)
\AddToHook{\foo}{after}
\ShowHook{\foo}

\ShowCommand\mycmd

\END
