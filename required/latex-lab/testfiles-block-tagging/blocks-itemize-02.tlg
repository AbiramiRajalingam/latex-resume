This is a generated file for the l3build validation system.
Don't change this file in any respect.
==> @endpe=false on input line ...
Package tagpdf Info: Rule 'Document' --> 'Part' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Document' --> 'text-unit'
==> increment P on input line ...
Package tagpdf Info: Rule 'Document' --> 'P' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Document' --> 'text'
Package tagpdf Info: Rule 'P' --> 'MC' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'P' --> 'MC'
==> increment /P on input line ...
Package tagpdf Info: closing structure 3 tagged /text
Package tagpdf Info: closing structure 2 tagged /text-unit
==> itemize-env-start
==> use instance: list-1
==> @endpe=false on input line ...
Package tagpdf Info: Rule 'Document' --> 'Part' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Document' --> 'text-unit'
Package tagpdf Info: Rule 'Document' --> 'L' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Document' --> 'itemize'
==> use instance: itemize-1
==> template:list:std
==> template:list:std end
Package tagpdf Info: Rule 'L' --> 'LI' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'L' --> 'LI'
==> template:item:std
Package tagpdf Info: Rule 'LI' --> 'Lbl' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LI' --> 'Lbl'
Package tagpdf Info: Rule 'Lbl' --> 'MC' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Lbl' --> 'MC'
Package tagpdf Info: closing structure 7 tagged /Lbl
Package tagpdf Info: Rule 'LI' --> 'LBody' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LI' --> 'LBody'
==> item everypar on input line ...
Package tagpdf Info: Rule 'LBody' --> 'Part' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LBody' --> 'text-unit'
==> increment P on input line ...
Package tagpdf Info: Rule 'LBody' --> 'P' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LBody' --> 'text'
Package tagpdf Info: Rule 'P' --> 'MC' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'P' --> 'MC'
==> blockenv common ending on input line ...
==> increment /P on input line ...
Package tagpdf Info: closing structure 10 tagged /text
Package tagpdf Info: closing structure 9 tagged /text-unit
Package tagpdf Info: closing structure 8 tagged /LBody
Package tagpdf Info: closing structure 6 tagged /LI
Package tagpdf Info: closing structure 5 tagged /itemize
-->A
The sequence \g__tag_struct_tag_stack_seq contains the items (without outer
braces):
>  {{text-unit}{Part}}
>  {{Document}{Document}}
>  {{Root}{StructTreeRoot}}.
<recently read> }
l. ...\typeout{-->A}\ShowTagging{struct-stack}
                                             \show\par\makeatletter\typeout{...
> \par=macro:
->\@restorepar \clubpenalty \@clubpenalty \__kernel_displayblock_doendpe: \@endpefalse \everypar {}\par .
l. ......t{-->A}\ShowTagging{struct-stack}\show\par
                                                  \makeatletter\typeout{==>@...
==>@endpe true
Package tagpdf Info: closing structure 4 tagged /text-unit
==> itemize-env-start
==> use instance: list-1
==> @endpe=false on input line ...
Package tagpdf Info: Rule 'Document' --> 'Part' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Document' --> 'text-unit'
Package tagpdf Info: Rule 'Document' --> 'L' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Document' --> 'itemize'
==> use instance: itemize-1
==> template:list:std
==> template:list:std end
-->B
The sequence \g__tag_struct_tag_stack_seq contains the items (without outer
braces):
>  {{itemize}{L}}
>  {{text-unit}{Part}}
>  {{Document}{Document}}
>  {{Root}{StructTreeRoot}}.
<recently read> }
l. ...\typeout{-->B}\ShowTagging{struct-stack}
                                             \show\par\makeatletter\typeout{...
> \par=macro:
->\legacy_if:nTF {@newlist}{\int_incr:N \par@deathcycles \int_compare:nNnTF \par@deathcycles >{1000}{\@noitemerr {\para_end: }}}{{\para_end: }}.
l. ......t{-->B}\ShowTagging{struct-stack}\show\par
                                                  \makeatletter\typeout{==>@...
==>@endpe false
Package tagpdf Info: Rule 'L' --> 'LI' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'L' --> 'LI'
==> template:item:std
Package tagpdf Info: Rule 'LI' --> 'Lbl' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LI' --> 'Lbl'
Package tagpdf Info: Rule 'Lbl' --> 'MC' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'Lbl' --> 'MC'
Package tagpdf Info: closing structure 14 tagged /Lbl
Package tagpdf Info: Rule 'LI' --> 'LBody' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LI' --> 'LBody'
==> item everypar on input line ...
Package tagpdf Info: Rule 'LBody' --> 'Part' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LBody' --> 'text-unit'
==> increment P on input line ...
Package tagpdf Info: Rule 'LBody' --> 'P' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'LBody' --> 'text'
Package tagpdf Info: Rule 'P' --> 'MC' is 1 (='0..n')
(tagpdf)             Rolemapped from: 'P' --> 'MC'
==> blockenv common ending on input line ...
==> increment /P on input line ...
Package tagpdf Info: closing structure 17 tagged /text
Package tagpdf Info: closing structure 16 tagged /text-unit
Package tagpdf Info: closing structure 15 tagged /LBody
Package tagpdf Info: closing structure 13 tagged /LI
Package tagpdf Info: closing structure 12 tagged /itemize
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
Package tagpdf Info: closing structure 11 tagged /text-unit
The sequence \g__tag_mc_main_marks_seq is empty
> .
[1
] (blocks-itemize-02.aux)
Package tagpdf Info: closing structure 1 tagged /Document
