This is a generated file for the l3build validation system.
Don't change this file in any respect.
==> @endpe=false on input line ...
Package tagpdf Info: The rule between parent 'Document' 
(tagpdf)             and child 'Part (from tpara)' is '1 (0..n)'
==> increment P on input line ...
Package tagpdf Info: The rule between parent 'Part (inherited from Document)' 
(tagpdf)             and child 'P' is '1 (0..n)'
Package tagpdf Info: The rule between parent 'P' 
(tagpdf)             and child 'MC' is '1 (0..n)'
==> increment /P on input line ...
Package tagpdf Info: closing structure 3 tagged /P
Package tagpdf Info: closing structure 2 tagged /tpara
==> itemize-env-start
==> use instance: list-1
==> @endpe=false on input line ...
Package tagpdf Info: The rule between parent 'Document' 
(tagpdf)             and child 'Part (from tpara)' is '1 (0..n)'
Package tagpdf Info: The rule between parent 'Part (inherited from Document)' 
(tagpdf)             and child 'L (from itemize)' is '1 (0..n)'
==> use instance: itemize-1
==> template:list:std
==> template:list:std end
Package tagpdf Info: The rule between parent 'L (from itemize)' 
(tagpdf)             and child 'LI' is '1 (0..n)'
==> template:item:std
Package tagpdf Info: The rule between parent 'LI' 
(tagpdf)             and child 'Lbl' is '1 (0..n)'
Package tagpdf Info: The rule between parent 'Lbl' 
(tagpdf)             and child 'MC' is '1 (0..n)'
Package tagpdf Info: closing structure 7 tagged /Lbl
Package tagpdf Info: The rule between parent 'LI' 
(tagpdf)             and child 'LBody' is '1 (0..n)'
==> item everypar on input line ...
Package tagpdf Info: The rule between parent 'LBody' 
(tagpdf)             and child 'Part (from tpara)' is '1 (0..n)'
==> increment P on input line ...
Package tagpdf Info: The rule between parent 'Part (inherited from LBody)' 
(tagpdf)             and child 'P' is '1 (0..n)'
Package tagpdf Info: The rule between parent 'P' 
(tagpdf)             and child 'MC' is '1 (0..n)'
==> blockenv common ending on input line ...
==> increment /P on input line ...
Package tagpdf Info: closing structure 10 tagged /P
Package tagpdf Info: closing structure 9 tagged /tpara
Package tagpdf Info: closing structure 8 tagged /LBody
Package tagpdf Info: closing structure 6 tagged /LI
Package tagpdf Info: closing structure 5 tagged /itemize
-->A
The sequence \g__tag_struct_tag_stack_seq contains the items (without outer
braces):
>  {{tpara}{Part}}
>  {{Document}{Document}}
>  {{Root}{StructTreeRoot}}.
<recently read> }
l. ...\typeout{-->A}\ShowTagging{struct-stack}
                                           \show\par\makeatletter\typeout{==...
> \par=macro:
->\@restorepar \clubpenalty \@clubpenalty \__kernel_displayblock_doendpe: \@endpefalse \everypar {}\par .
l. ......out{-->A}\ShowTagging{struct-stack}\show\par
                                                  \makeatletter\typeout{==>@...
==>@endpe true
Package tagpdf Info: closing structure 4 tagged /tpara
==> itemize-env-start
==> use instance: list-1
==> @endpe=false on input line ...
Package tagpdf Info: The rule between parent 'Document' 
(tagpdf)             and child 'Part (from tpara)' is '1 (0..n)'
Package tagpdf Info: The rule between parent 'Part (inherited from Document)' 
(tagpdf)             and child 'L (from itemize)' is '1 (0..n)'
==> use instance: itemize-1
==> template:list:std
==> template:list:std end
-->B
The sequence \g__tag_struct_tag_stack_seq contains the items (without outer
braces):
>  {{itemize}{L}}
>  {{tpara}{Part}}
>  {{Document}{Document}}
>  {{Root}{StructTreeRoot}}.
<recently read> }
l. ...\typeout{-->B}\ShowTagging{struct-stack}
                                           \show\par\makeatletter\typeout{==...
> \par=macro:
->\legacy_if:nTF {@newlist}{\int_incr:N \par@deathcycles \int_compare:nNnTF \par@deathcycles >{1000}{\@noitemerr {\para_end: }}}{{\para_end: }}.
l. ......out{-->B}\ShowTagging{struct-stack}\show\par
                                                  \makeatletter\typeout{==>@...
==>@endpe false
Package tagpdf Info: The rule between parent 'L (from itemize)' 
(tagpdf)             and child 'LI' is '1 (0..n)'
==> template:item:std
Package tagpdf Info: The rule between parent 'LI' 
(tagpdf)             and child 'Lbl' is '1 (0..n)'
Package tagpdf Info: The rule between parent 'Lbl' 
(tagpdf)             and child 'MC' is '1 (0..n)'
Package tagpdf Info: closing structure 14 tagged /Lbl
Package tagpdf Info: The rule between parent 'LI' 
(tagpdf)             and child 'LBody' is '1 (0..n)'
==> item everypar on input line ...
Package tagpdf Info: The rule between parent 'LBody' 
(tagpdf)             and child 'Part (from tpara)' is '1 (0..n)'
==> increment P on input line ...
Package tagpdf Info: The rule between parent 'Part (inherited from LBody)' 
(tagpdf)             and child 'P' is '1 (0..n)'
Package tagpdf Info: The rule between parent 'P' 
(tagpdf)             and child 'MC' is '1 (0..n)'
==> blockenv common ending on input line ...
==> increment /P on input line ...
Package tagpdf Info: closing structure 17 tagged /P
Package tagpdf Info: closing structure 16 tagged /tpara
Package tagpdf Info: closing structure 15 tagged /LBody
Package tagpdf Info: closing structure 13 tagged /LI
Package tagpdf Info: closing structure 12 tagged /itemize
==> flattened=false on input line ...
==> Structure-end tpara after list on input line ...
Package tagpdf Info: closing structure 11 tagged /tpara
Package tagpdf Info: -1 has been pushed to the mc stack
Package tagpdf Info: -1 has been removed from the mc stack
Package tagpdf Info: -1 has been pushed to the mc stack
Package tagpdf Info: -1 has been removed from the mc stack
tagpdf: INFO TAG-NOT-TAGGED: this has not been tagged, using artifact
tagpdf: INFO TAG-NOT-TAGGED: this has not been tagged, using artifact
tagpdf: INFO TAG-NOT-TAGGED: this has not been tagged, using artifact [1
] (blocks-itemize-02.aux)
Package tagpdf Info: closing structure 1 tagged /Document
