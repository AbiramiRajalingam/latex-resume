This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: Making object types
============================================================
Package prototype Info: Declaring object type 'test' taking 0 argument(s).
Package prototype Info: Declaring object type 'test' taking 1 argument(s).
Package prototype Info: Declaring object type 'test' taking 2 argument(s).
============================================================
============================================================
TEST 2: Making object types:errors
============================================================
! Package prototype Error: Bad number of arguments for object type 'test'.
For immediate help type H <return>.
 ...                                              
l. ...}
An object may accept between 0 and 9 arguments.
You asked to use -1 arguments: this is not supported.
! Package prototype Error: Bad number of arguments for object type 'test'.
For immediate help type H <return>.
 ...                                              
l. ...}
An object may accept between 0 and 9 arguments.
You asked to use 10 arguments: this is not supported.
! Missing number, treated as zero.
<to be read again> 
                   i
l. ...}
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX3 Error: Relation 'i' not among =,<,>,==,!=,<=,>=.
l. ...}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Package prototype Error: Bad number of arguments for object type 'test'.
For immediate help type H <return>.
 ...                                              
l. ...}
An object may accept between 0 and 9 arguments.
You asked to use 0i\__int_eval_end:  arguments: this is not supported.
============================================================
